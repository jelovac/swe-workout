name: PHP Workflow

on:
  push:
  pull_request:

jobs:

  # see https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-a-registry-using-a-personal-access-token
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      DOCKER_BUILD_REPOSITORY: ${{ steps.assign_env_vars.outputs.DOCKER_BUILD_REPOSITORY }}
      DOCKER_BUILD_TAG: ${{ steps.assign_env_vars.outputs.DOCKER_BUILD_TAG }}
      DOCKER_RELEASE_TAG: ${{ steps.assign_env_vars.outputs.DOCKER_RELEASE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Assign environment variables
        id: assign_env_vars
        run: |
          DOCKER_BUILD_REPOSITORY=jelovac/swe-workout-php
          echo "DOCKER_BUILD_REPOSITORY=${DOCKER_BUILD_REPOSITORY}" >> $GITHUB_ENV
          echo "::set-output name=DOCKER_BUILD_REPOSITORY::$DOCKER_BUILD_REPOSITORY"

          DOCKER_BUILD_TAG=${DOCKER_BUILD_REPOSITORY}:build_${BUILD_ID}
          echo "DOCKER_BUILD_TAG=${DOCKER_BUILD_TAG}" >> $GITHUB_ENV
          echo "::set-output name=DOCKER_BUILD_TAG::$DOCKER_BUILD_TAG"

          DOCKER_RELEASE_TAG=${DOCKER_BUILD_REPOSITORY}:latest
          echo "DOCKER_RELEASE_TAG=${DOCKER_RELEASE_TAG}" >> $GITHUB_ENV
          echo "::set-output name=DOCKER_RELEASE_TAG::$DOCKER_RELEASE_TAG"

      - name: Build Docker Image
        run: |
          docker build \
            --target package \
            --tag $DOCKER_BUILD_TAG \
            --label "build_id=${BUILD_ID}" \
            excercises/php

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push built Docker Image
        run: |
          docker push $DOCKER_BUILD_TAG

      - name: Release built Docker Image
        if: >
          github.ref == 'refs/heads/main' &&
          (
            github.event_name == 'push' ||
            (
              github.event_name == 'pull_request' &&
              github.event.pull_request.merged == true
            )
          )
        run: |
          docker tag $DOCKER_BUILD_TAG $DOCKER_RELEASE_TAG
          docker push $DOCKER_RELEASE_TAG

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Perform PHPUnit tests
        run: |
          touch phpunit.report.xml
          docker run -v "$(pwd)/phpunit.report.xml:/var/www/app/phpunit.report.xml" "${{ needs.build.outputs.DOCKER_BUILD_TAG }}" bash -c "composer run code:test -- --log-junit phpunit.report.xml"
          echo "::set-output name=file-path::$(pwd)/phpunit.report.xml"

      - uses: actions/upload-artifact@v3
        with:
          name: phpunit-report
          path: phpunit.report.xml
